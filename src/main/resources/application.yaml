logging:
  config: classpath:common-logback-spring.xml
  level:
    ROOT: info
    com.company.project: ${PN_PACKAGE_LOG_LEVEL}
    net.ttddyy.dsproxy.listener: debug

management:
  endpoints:
    web:
      exposure:
        include: info, health, prometheus
  endpoint:
    health:
      show-details: always

springdoc:
  swagger-ui:
    enabled: false

spring:
  application:
    name: ms-template-project
  main:
    banner-mode: "off"
  threads:
    virtual:
      enabled: true
  liquibase:
    change-log: classpath:liquibase/changelog-master.yaml
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST_PORT}/pn_template_project
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASS}
    hikari:
      poolName: MsTemplateProjectHikariPool
      auto-commit: false
      maximum-pool-size: ${HIKARICP_DEFAULT_POOL_SIZE}
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
  cloud:
    openfeign:
      okhttp:
        enabled: true
      client:
        config:
          default:
            loggerLevel: basic
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASS}
    listener:
      simple:
        missing-queues-fatal: false
        observation-enabled: true
        concurrency: 3
        max-concurrency: 5
        prefetch: 10
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3s
          max-interval: 10s
          multiplier: 2
          non-retryable-exceptions:
            - com.company.project.template.exception.EventDataMismatchingException
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASS}
    mongodb:
      uri: mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST_PORT}/pn_template_project${MONGO_OPTIONS}
      auto-index-creation: true

mongock:
  migration-scan-package:
    - com.company.project.template.dao.migration
  transactionEnabled: false

jdbc:
  datasource-proxy:
    query:
      enable-logging: ${DS_PROXY_ENABLED:true}
    slow-query:
      enable-logging: ${DS_PROXY_ENABLED:true}
    multiline: false

info:
  application:
    name: ${spring.application.name}
    java-version: '@javaVersion@'
    gradle-version: '@gradleVersion@'
    spring-boot-version: '@springBootVersion@'
    spring-cloud-version: '@springCloudVersion@'
    common-lib-version: '@pnCommonLibVersion@'

application:
  interceptor:
    common-request:
      exclude-path-patterns: /swagger**/**,/**/api-docs,/error,/favicon.ico
  swagger:
    info:
      version: 1.0
      title: "${spring.application.name} Rest API"
      description: "Spring Boot REST API for ${spring.application.name}"
  cache:
    prefix:
      payment: "pn.payment."
    ttl:
      payment: 5
  client:
    notification:
      url: ${MS_NOTIFICATION_URL}
  scheduler:
    enabled: true
    payment-report-cron: '0 0 * * * *'  # every hour
